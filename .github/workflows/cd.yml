name: Continuous Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '18.x'

jobs:
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Deploy to Dev
        run: |
          sam build
          sam deploy --config-env dev --no-fail-on-empty-changeset

  # Commented out for experimental phase
  # deploy-staging:
  #   name: Deploy to Staging
  #   needs: deploy-dev
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   
  #   steps:
  #     - uses: actions/checkout@v3
  #     
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         
  #     - name: Install dependencies
  #       run: npm ci
  #       
  #     - name: Run tests
  #       run: npm test
  #       
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.AWS_REGION }}
  #         
  #     - name: Deploy to Staging
  #       run: |
  #         sam build
  #         sam deploy --config-env staging --no-fail-on-empty-changeset

  # deploy-prod:
  #   name: Deploy to Production
  #   needs: deploy-staging
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: production
  #     url: ${{ steps.deploy.outputs.website-url }}
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   
  #   steps:
  #     - uses: actions/checkout@v3
  #     
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         
  #     - name: Install dependencies
  #       run: npm ci
  #       
  #     - name: Run tests
  #       run: npm test
  #       
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.AWS_REGION }}
  #         
  #     - name: Deploy to Production
  #       id: deploy
  #       run: |
  #         sam build
  #         sam deploy --config-env prod --no-fail-on-empty-changeset 